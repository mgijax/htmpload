Index: bin/makeIMPC.py
===================================================================
RCS file: /mgi/cvsroot/mgi/dataload/htmpload/bin/Attic/makeIMPC.py,v
retrieving revision 1.1.2.14
diff -r1.1.2.14 makeIMPC.py
601,603c601,603
<     # set defaults
<     error = 0
<     uniqStrainProcessingDict[uniqStrainProcessingKey] = 1
---
>     if uniqStrainProcessingKey in uniqStrainProcessingDict.keys():
> 	uniqStrainProcessingDict[uniqStrainProcessingKey].append(line)
> 	return 'error'
608,633d607
<     # Allele/MCL Object Identity/Consistency Check US5 doc 4b
<     if allelesInDbDict.has_key(alleleID):
< 	dbAllele = allelesInDbDict[alleleID]
< 
< 	msg=[]
< 	# US5 doc 4b2
< 	if alleleSymbol != dbAllele.s:
< 	    msg.append('For matched Allele accID, Allele symbol: %s does not match database symbol: %s' % (alleleSymbol, dbAllele.s))
< 	    error = 1
< 	if markerID != dbAllele.m:
< 	    msg.append('Marker ID: %s does not match database marker ID: %s' % \
< 		(markerID, dbAllele.m))
< 	    error = 1
< 	if mutantID not in dbAllele.c:
< 	    msg.append('Mutant ID: %s not associated with %s in database' % \
< 		(mutantID, alleleID))
< 	    error = 1
< 	msg = string.join(msg)
<     else: # US5 doc 4b2
< 	# 15 cases in impc.json e.g. NULL-114475FCF4
< 	msg = 'Allele not in the database: %s' % alleleID
< 	error = 1
<     if error == 1:
< 	logIt(msg, line, 1)
< 	uniqStrainProcessingDict[uniqStrainProcessingKey] = 1
< 	return 1
638,640c612,614
< 	logIt(msg, line, 1)
< 	uniqStrainProcessingDict[uniqStrainProcessingKey] = 1
< 	return 1
---
> 	#logIt(msg, line, 1)
> 	uniqStrainProcessingDict[uniqStrainProcessingKey] = [msg, line]
> 	return 'error'
647c621
< 	# outside this function
---
> 	# outside this block
650,651c624,626
< 	logIt(msg, line, 0)
< 	return 1
---
> 	#logIt(msg, line, 0)
> 	uniqStrainProcessingDict[uniqStrainProcessingKey] = [msg, line]
> 	return 'error'
688,689c663,665
< 	logIt(msg, line, 1)
< 	return 1
---
> 	#logIt(msg, line, 1)
> 	uniqStrainProcessingDict[uniqStrainProcessingKey] = [msg, line]
> 	return 'error'
704,705c680,681
<     uniqStrainProcessingDict[uniqStrainProcessingKey] = strainName
<     return
---
>     return strainName
> 
848d823
< 	imits2Data = colonyToMCLDict[colonyID]
852a828,852
> ##################
> 	# Allele/MCL Object Identity/Consistency Check US5 doc 4b
> 	if allelesInDbDict.has_key(alleleID):
> 	    dbAllele = allelesInDbDict[alleleID]
> 
> 	    msg=[]
> 	    # US5 doc 4b2
> 	    if alleleSymbol != dbAllele.s:
> 		msg.append('For matched Allele accID, Allele symbol: %s does not match database symbol: %s' % (alleleSymbol, dbAllele.s))
> 		error = 1
> 	    if markerID != dbAllele.m:
> 		msg.append('Marker ID: %s does not match database marker ID: %s' % (markerID, dbAllele.m))
> 		error = 1
> 	    if mutantID not in dbAllele.c:
> 		msg.append('Mutant ID: %s not associated with %s in database' % (mutantID, alleleID))
> 		error = 1
> 	    msg = string.join(msg)
> 	else: # US5 doc 4b2
> 	    # 15 cases in impc.json e.g. NULL-114475FCF4
> 	    msg = 'Allele not in the database: %s' % alleleID
> 	    error = 1
> 	if error == 1:
> 	    logIt(msg, line, 1)
> 	    continue
> #################
867c867
< 	    uniqStrainProcessingDict[uniqStrainProcessingKey] = strainName 
---
> 	    #uniqStrainProcessingDict[uniqStrainProcessingKey] = strainName 
877,878c877,878
< 	    if uniqStrainProcessingKey not in uniqStrainProcessingDict.keys():
< 		 doUniqStrainChecks(uniqStrainProcessingKey, line)
---
> 	    # Nor does it include gender, multi gender per uniq allele
> 	    strainName = doUniqStrainChecks(uniqStrainProcessingKey, line)
881c881
< 	if uniqStrainProcessingDict[uniqStrainProcessingKey] == 1:
---
> 	if strainName == 'error':
885,886d884
< 	else:
< 	    strainName = uniqStrainProcessingDict[uniqStrainProcessingKey]
900a899,906
>     for key in uniqStrainProcessingDict.keys():
> 	msgList = uniqStrainProcessingDict[key]
> 	msg = msgList[0]
> 	for line in msgList[1:]:
> 	    if 'Strain ID/Name discrepancy' in msg:
> 		logIt(msg, line, 0)
> 	    else:
> 		logIt(msg, line, 1)
